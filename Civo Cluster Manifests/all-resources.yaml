apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
--- 

apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-89w4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "980263"
    uid: a93a1ad8-afae-4bbe-990a-d26574a9aed5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9c884e5a8277ff15e55dde2a19b982fd4b8ca404b6ad31306d631683e6d8378
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://77dedf64c44e566f771ace8b89bd886a18a0fcdd6c8ebf231fc22fd2f9cb055d
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://8e69152d68fd9a1955407290fe9015aa0536e493e2ee8534023165aa40aad782
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://f0e0700812499ef7658ac518086d7222c8351bfbced1579b7d71ac40fb4be97c
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 192.168.1.7
    podIPs:
    - ip: 192.168.1.7
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:08Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-vnp5p
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "980281"
    uid: 3e530850-3cd0-4fa7-ad99-fc6c35f63c32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cc2ce409512bc275a0d8e2fcff9e37a5ca10c262fd8676b708febbfe132544b9
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://feee373041f6ab5ceec1cba652731e090efec499df179a19cf553a135138e6b8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:49Z"
    - containerID: containerd://a217580fb8ac0b69477ff5749bd531e5d2e3f09eb837c6ff3301854245f6d12e
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://3d701f3ae34cc6a02286f1b0d922c76c60f4d013fb002ead15246045a8190a1b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.16
    podIPs:
    - ip: 10.42.15.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: kubernetes-dashboard-897c7599f-
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f-bqz7q
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kubernetes-dashboard-897c7599f
      uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
    resourceVersion: "980291"
    uid: 834faa85-0d7a-44ed-a7ce-e6844a830216
  spec:
    containers:
    - args:
      - --auto-generate-certificates
      - --namespace=kubernetes-dashboard
      image: kubernetesui/dashboard:v2.4.0
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: kubernetes-dashboard
      ports:
      - containerPort: 8443
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: kubernetes-dashboard-certs
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kubernetes-dashboard-certs
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-certs
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5333d8514463aa4bcdf838f231a40c4b27fb21719102bc2d1db6f938ba689f8
      image: docker.io/kubernetesui/dashboard:v2.4.0
      imageID: docker.io/kubernetesui/dashboard@sha256:526850ae4ea9aba360e72b6df69fd3126b129d446efe83ac5250282b85f95b7f
      lastState:
        terminated:
          containerID: containerd://129d881cf0c0fa6bbcc26c153af98919d4181d1e46bee5eed2efd8ed68e30b7b
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:00Z"
      name: kubernetes-dashboard
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.18
    podIPs:
    - ip: 10.42.15.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: coredns-854c77959c-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c-2hlch
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-854c77959c
      uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
    resourceVersion: "980300"
    uid: 9eeb7074-c00d-4c43-8aa7-c53e098ca6fc
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/coredns-coredns:1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: coredns-token-n6nkq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - name: coredns-token-n6nkq
      secret:
        defaultMode: 420
        secretName: coredns-token-n6nkq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:03:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69f81453c2d2099c5a478479a2c8c7ddd73a40ab04918d195ae42d75beb4ca8f
      image: docker.io/rancher/coredns-coredns:1.8.0
      imageID: docker.io/rancher/coredns-coredns@sha256:ec24569c5fe0b63275ae199d55aa48d83bd291c5194037e31c4fe4070ac9e531
      lastState:
        terminated:
          containerID: containerd://faa0f4953b983341a2502f99bb70748f297f62cf350f4fdba841a697292f1cf8
          exitCode: 255
          finishedAt: "2022-01-15T10:03:40Z"
          reason: Unknown
          startedAt: "2022-01-15T09:52:59Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:48Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.17
    podIPs:
    - ip: 10.42.15.17
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      controller-revision-hash: argocd-application-controller-7df456b6f9
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
    resourceVersion: "980318"
    uid: d73a9cad-35c6-4ad9-83c6-3544245b577b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-application-controller
      - --status-processors
      - "20"
      - --operation-processors
      - "10"
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-application-controller-token-nxx58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-application-controller-token-nxx58
      secret:
        defaultMode: 420
        secretName: argocd-application-controller-token-nxx58
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:04:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae3b937163af7388de2b3717353cb066db1d5e9c92b4e53f7bcbd0b69e2cf6dc
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://78ece657de6be50efad942274205da16fe9b97538e146a14c827b467266875cb
          exitCode: 255
          finishedAt: "2022-01-15T10:03:39Z"
          reason: Unknown
          startedAt: "2022-01-15T09:53:01Z"
      name: argocd-application-controller
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:03:50Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.19
    podIPs:
    - ip: 10.42.15.19
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tm2f4
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981615"
    uid: d0533a03-4cdc-48e5-8a89-0ad2a9aaf725
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://60a8ece90acf282ad2b720879684fada535481cace2685608f67bbaf09c23f11
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://0c70d7819f37cb2ae971b8d1d294e595a2e0a7a72b40439b5069d932337ecbba
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.12
    podIPs:
    - ip: 10.42.13.12
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: dashboard-metrics-scraper-79c5968bdc-
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc-j4sw7
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dashboard-metrics-scraper-79c5968bdc
      uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
    resourceVersion: "981622"
    uid: 4134f956-3a21-439a-b8ae-bdd5fd4bff9b
  spec:
    containers:
    - image: kubernetesui/metrics-scraper:v1.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: dashboard-metrics-scraper
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 2001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kubernetes-dashboard-token-pjqj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kubernetes-dashboard
    serviceAccountName: kubernetes-dashboard
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-volume
    - name: kubernetes-dashboard-token-pjqj8
      secret:
        defaultMode: 420
        secretName: kubernetes-dashboard-token-pjqj8
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f3599f7cb634f9cee06ba040c8fd4b1ceee53f43f0131c063e8ce9c509c0c86
      image: docker.io/kubernetesui/metrics-scraper:v1.0.6
      imageID: docker.io/kubernetesui/metrics-scraper@sha256:1f977343873ed0e2efd4916a6b2f3075f310ff6fe42ee098f54fc58aa7a28ab7
      lastState:
        terminated:
          containerID: containerd://acdfa129b1cbeeb40b95ba42a875b90e9c89422cba2f01cd13882db0a3bc2c7a
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:35Z"
      name: dashboard-metrics-scraper
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.15
    podIPs:
    - ip: 10.42.13.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-w952g
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "981634"
    uid: 798d84a9-1f2f-44cc-ae47-0fc148df1f1b
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c2a7a69c5a8da93512db2f2d34c9e1a57e82dfe92e66fe7d75ee54eacb8783d
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://3eef776a076f2cb4521ed3a017229db54f3a54e421778246a3a9596701197ff3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:41Z"
      name: imdb-mongodb
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.13
    podIPs:
    - ip: 10.42.13.13
    qosClass: Burstable
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: civo-csi-controller-
    labels:
      app: civo-csi-controller
      controller-revision-hash: civo-csi-controller-6d764dfc8d
      role: civo-csi
      statefulset.kubernetes.io/pod-name: civo-csi-controller-0
    name: civo-csi-controller-0
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: civo-csi-controller
      uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
    resourceVersion: "981641"
    uid: b80b26a4-f32e-4ed1-a321-b59c2e989346
  spec:
    containers:
    - args:
      - --csi-address=$(ADDRESS)
      - --default-fstype=ext4
      - --timeout=30s
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --v=5
      env:
      - name: ADDRESS
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: CIVO_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: civo-api-access
      - name: CIVO_REGION
        valueFrom:
          secretKeyRef:
            key: region
            name: civo-api-access
      - name: CIVO_NAMESPACE
        valueFrom:
          secretKeyRef:
            key: namespace
            name: civo-api-access
      - name: CIVO_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: cluster-id
            name: civo-api-access
      - name: CIVO_API_URL
        valueFrom:
          secretKeyRef:
            key: api-url
            name: civo-api-access
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-controller-sa-token-zt9q5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: civo-csi-controller-0
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-controller-sa
    serviceAccountName: civo-csi-controller-sa
    subdomain: civo-csi
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: socket-dir
    - name: civo-csi-controller-sa-token-zt9q5
      secret:
        defaultMode: 420
        secretName: civo-csi-controller-sa-token-zt9q5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad28d1fda3ce8187b54829c8b52fbbcce088202b865e06d917e7fd9d4caa07a3
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://e4c4b703557d7ef7b0825d2231a5c291d9efbd4784930a7da007446c81252601
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    - containerID: containerd://eca984d3eea793f8a3d8cddccd8705648066a42f364fa1c31a55e107070fba37
      image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
      imageID: k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09
      lastState:
        terminated:
          containerID: containerd://a799a75b14db8ba7f1dfc865ccbddb2937659e539a04ef1f133bf750ad873bb9
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:46Z"
      name: csi-attacher
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://91d42315d7a5ba4ab69e535764bbe83018205e79d50dbe0c6c0844ba355727f1
      image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
      imageID: k8s.gcr.io/sig-storage/csi-provisioner@sha256:c8e03f60afa90a28e4bb6ec9a8d0fc36d89de4b7475cf2d613afa793ec969fe0
      lastState:
        terminated:
          containerID: containerd://40f6ebca8ab34a0666859a90be77b6abac6e958b6760a64da1a8fd04f1d84dce
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.14
    podIPs:
    - ip: 10.42.13.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-rwhbq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "981645"
    uid: 8daed46f-4f3c-4228-8d5e-d47424c53336
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6db4c59abe8f6932563336ab739a2ff14d39063ddcac3069ea6c97f63b435cde
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://7dc6becf9ea1c7965ebdec903b80a81d1514095d43fd17c0b46dc9496fd4d4e4
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:42Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://2c9a8a34cf790c24ccca9b32d78e1ccde2b549a17c49dc92a1d127797aee335d
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://799f3790f46ace23b78034b43b7f59730c46a55387c42da05c2b45c2baacc1e3
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 192.168.1.6
    podIPs:
    - ip: 192.168.1.6
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: argocd-redis-747b678f89-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89-2ztf8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-747b678f89
      uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
    resourceVersion: "981649"
    uid: ca97e7f6-0725-4292-8294-8fd54367f773
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      image: redis:6.2.4-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-redis-token-jxjdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: argocd-redis-token-jxjdq
      secret:
        defaultMode: 420
        secretName: argocd-redis-token-jxjdq
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2b6de8a8ac1653cc8f4c07fbe2ffaa2f55cd7510a71b9768d50a74ea6f5173f
      image: docker.io/library/redis:6.2.4-alpine
      imageID: docker.io/library/redis@sha256:0039796b887fd30e460353f14e46ba1004152aa97f5f59094cc21eac445fc89b
      lastState:
        terminated:
          containerID: containerd://376895efd8d1c55fe9b5b85e476e5b69c22876bb28a8b4d0cb99116cfcfd8c37
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:39Z"
      name: redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.16
    podIPs:
    - ip: 10.42.13.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:06Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-dfr9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "981656"
    uid: b9286928-6a18-436e-8298-58e56d124e69
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d1796a3b7d130122571724320f4acead377a165f97a13d1e01250c48ae5dceaf
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://178208b29e28ff7abc79c15901dcd64e6e25fc762a1994c5c7b5782d31854681
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:38Z"
      name: lb-port-443
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:13Z"
    - containerID: containerd://3e3795f88ecb8faa684fb68f09321b1004c52b99e6fcabc108734d5c15edaf93
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://66745089360d5c1e7acf2be2cb94d89dfafbc98d2d23b2f45dc9a607d21e9a71
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:37Z"
      name: lb-port-80
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:12Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.10
    podIPs:
    - ip: 10.42.13.10
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:37Z"
    generateName: argocd-repo-server-6fc4456c89-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89-pfk7x
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-6fc4456c89
      uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
    resourceVersion: "981681"
    uid: a3a3a7f2-de16-4830-8bcb-45702557b879
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - command:
      - uid_entrypoint.sh
      - argocd-repo-server
      - --redis
      - argocd-redis:6379
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:26:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47962f1c48d7117ce85a9cb028a543070225bbdca8f741fcf526e00f07faee9
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://67edaf98b599b91c2b1d0f64d3caa70dcff69c6c2e37a96055e9241220fe0110
          exitCode: 255
          finishedAt: "2022-01-15T10:26:03Z"
          reason: Unknown
          startedAt: "2022-01-14T17:42:48Z"
      name: argocd-repo-server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:26:14Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.17
    podIPs:
    - ip: 10.42.13.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:39Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-4ptvf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982946"
    uid: 7b50e486-a4fb-4fde-bcb6-5f6f1b62178f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:39Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-f9dx8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982948"
    uid: 69044ff3-10e9-4356-9595-bc3530e90baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:52:04Z"
    generateName: svclb-argocd-server-
    labels:
      app: svclb-argocd-server
      controller-revision-hash: 79c694f56f
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: argocd-server
    name: svclb-argocd-server-hbvcf
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-argocd-server
      uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
    resourceVersion: "982950"
    uid: 3125ba27-4aca-4f4e-bf34-b50535baca63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.120.139
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-hlgzd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-hlgzd
      secret:
        defaultMode: 420
        secretName: default-token-hlgzd
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:52:04Z"
      message: '0/3 nodes are available: 1 node(s) didn''t have free ports for the
        requested pod ports, 2 node(s) didn''t match Pod''s node affinity.'
      reason: Unschedulable
      status: "False"
      type: PodScheduled
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: civo-csi-node-
    labels:
      app: civo-csi-node
      controller-revision-hash: 857968f5c7
      pod-template-generation: "1"
      role: civo-csi
    name: civo-csi-node-2s7jc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: civo-csi-node
      uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
    resourceVersion: "982952"
    uid: f9cb108d-d118-42a8-8c07-b82b3071e48c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi/
        name: plugin-dir
      - mountPath: /registration/
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    - env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
      image: civo/csi:latest
      imagePullPolicy: Always
      name: civo-csi-plugin
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/plugins/csi.civo.com
        name: socket-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /etc
        name: etc-dir
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: civo-csi-node-sa-token-hwqz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: civo-csi-node-sa
    serviceAccountName: civo-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.civo.com
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: pods-mount-dir
    - hostPath:
        path: /etc
        type: ""
      name: etc-dir
    - hostPath:
        path: /dev
        type: ""
      name: device-dir
    - hostPath:
        path: /etc/udev/rules.d/
        type: ""
      name: udev-rules-dir
    - name: civo-csi-node-sa-token-hwqz5
      secret:
        defaultMode: 420
        secretName: civo-csi-node-sa-token-hwqz5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d746ee171e0ef9acb3c6ba3dbfcf56603a2e0b554fbd4122e93bb90759fa2fa5
      image: docker.io/civo/csi:latest
      imageID: docker.io/civo/csi@sha256:fb7d7c0a1efe84e128eeab5c5f21a7ca4278e49985420a37d882f175dc932eca
      lastState:
        terminated:
          containerID: containerd://f527cac8d1627850fe6c527b153e5706233313b91e96ccdbff0703dbf5455c14
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:40Z"
      name: civo-csi-plugin
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    - containerID: containerd://98cef4f1db4397ac074e8300c5b0d9c7658fbb6cf4bd3c93061ede4f22e9dd9b
      image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
      imageID: k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:a61d309da54641db41fb8f35718f744e9f730d4d0384f8c4b186ddc9f06cbd5f
      lastState:
        terminated:
          containerID: containerd://d959020abe6f477f5fbde9b6f15591426eb40f1037e188c743a6b8a8309759c0
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 192.168.1.5
    podIPs:
    - ip: 192.168.1.5
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:42:07Z"
    generateName: svclb-traefik-
    labels:
      app: svclb-traefik
      controller-revision-hash: 66594cbc5
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
    name: svclb-traefik-q5zks
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik
      uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
    resourceVersion: "982964"
    uid: acb68dbc-38ae-462a-a78f-ba2d022ab97a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-port-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    - env:
      - name: SRC_PORT
        value: "443"
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IP
        value: 10.43.214.29
      image: rancher/klipper-lb:v0.1.2
      imagePullPolicy: IfNotPresent
      name: lb-port-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-port-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-qzljk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: default-token-qzljk
      secret:
        defaultMode: 420
        secretName: default-token-qzljk
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c059ddb97e8ca9014de86bea8742876d80d76fa68a6862d31e6bc28bf191b88
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://ea38cde555c1d47845871d97e35af604f9c42c22a37b6c8727d45332e187a7b1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-443
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    - containerID: containerd://95159b1787b6efc3c627bfc67012e6c11c0e1fd0b4e691304594b036ba4b8f77
      image: docker.io/rancher/klipper-lb:v0.1.2
      imageID: docker.io/rancher/klipper-lb@sha256:2fb97818f5d64096d635bc72501a6cb2c8b88d5d16bc031cf71b5b6460925e4a
      lastState:
        terminated:
          containerID: containerd://533f83bce580dfdf61ba8f8b1c1ce70cfd8d381b1f632a123bc313f6d88a10e4
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:38Z"
      name: lb-port-80
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:21Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.16
    podIPs:
    - ip: 10.42.14.16
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: metrics-server-86cbb8457f-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f-dn5vp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-86cbb8457f
      uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
    resourceVersion: "982968"
    uid: 3489c100-3df1-4c17-abf0-6f936ee1b11a
  spec:
    containers:
    - image: rancher/metrics-server:v0.3.6
      imagePullPolicy: IfNotPresent
      name: metrics-server
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: metrics-server-token-bcn59
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: metrics-server-token-bcn59
      secret:
        defaultMode: 420
        secretName: metrics-server-token-bcn59
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://feaaf2954e38712977d579b0913a2e28bdcf4d15646f8537743cd0dcd0cb1c68
      image: docker.io/rancher/metrics-server:v0.3.6
      imageID: docker.io/rancher/metrics-server@sha256:b85628b103169d7db52a32a48b46d8942accb7bde3709c0a4888a23d035f9f1e
      lastState:
        terminated:
          containerID: containerd://bcfd571ce74b3c4b0a12cf4865a7e6fbfaf5fce34eefe0e77e750ef458091aa1
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: metrics-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.17
    podIPs:
    - ip: 10.42.14.17
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-dex-server-76ff776f97-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97-cxcq8
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76ff776f97
      uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
    resourceVersion: "982996"
    uid: 43d754ec-b5d7-42d5-aaa7-f8f56e26ea8e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      image: ghcr.io/dexidp/dex:v2.27.0
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-dex-server-token-lrz79
        readOnly: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - name: argocd-dex-server-token-lrz79
      secret:
        defaultMode: 420
        secretName: argocd-dex-server-token-lrz79
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:58:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6261b37bb00c67d2b08fe98b926c1062987ad2962b35881995f05714d63a3e3a
      image: ghcr.io/dexidp/dex:v2.27.0
      imageID: ghcr.io/dexidp/dex@sha256:ff94efdd1ec68f43e01b39a2d11a73961b1cf73860515893118af731551f1939
      lastState:
        terminated:
          containerID: containerd://4755c204e479db604a0117e3c59729358d7a9c460e379e1dd03f6025e6e59ecd
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:41Z"
      name: dex
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:24Z"
    hostIP: 192.168.1.5
    initContainerStatuses:
    - containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: containerd://9cc7c68e2245834f215db2da8debf518e8bd0aa92e08a439968343888f925dcf
          exitCode: 0
          finishedAt: "2022-01-15T10:45:22Z"
          reason: Completed
          startedAt: "2022-01-15T10:45:22Z"
    phase: Running
    podIP: 10.42.14.14
    podIPs:
    - ip: 10.42.14.14
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: traefik-6f9cbd9bd4-
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4-gz8rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-6f9cbd9bd4
      uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
    resourceVersion: "983006"
    uid: a5f3a626-a920-415a-a976-e854487c4a82
  spec:
    containers:
    - args:
      - --configfile=/config/traefik.toml
      image: rancher/library-traefik:1.7.19
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 8880
        name: httpn
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 8080
        name: dash
        protocol: TCP
      - containerPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: http
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: config
      - mountPath: /ssl
        name: ssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: traefik-token-xlg6p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: traefik
      name: config
    - name: ssl
      secret:
        defaultMode: 420
        secretName: traefik-default-cert
    - name: traefik-token-xlg6p
      secret:
        defaultMode: 420
        secretName: traefik-token-xlg6p
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d00352bcb57e03f1110d3f37a20c91ff71fc4b6194f2cdddf4c8872d338e064b
      image: docker.io/rancher/library-traefik:1.7.19
      imageID: docker.io/rancher/library-traefik@sha256:3ba3ed48c4632f2b02671923950b30b5b7f1b556e559ce15446d1f5d648a037d
      lastState:
        terminated:
          containerID: containerd://fbc301aba9ea486bce978fac5ef5645d976074a9ebc9fe8082e806a1cab5855a
          exitCode: 255
          finishedAt: "2022-01-15T10:45:12Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: traefik
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.18
    podIPs:
    - ip: 10.42.14.18
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: argocd-server-7d57bc994b-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b-5mdjm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-7d57bc994b
      uid: 93c07432-2f25-448d-8456-1c36feac89d6
    resourceVersion: "983027"
    uid: e50d38f1-6117-49d1-a384-2a499134eead
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - argocd-server
      - --staticassets
      - /shared/app
      image: quay.io/argoproj/argocd:v2.0.4
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: argocd-server-token-m6hrt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-server-token-m6hrt
      secret:
        defaultMode: 420
        secretName: argocd-server-token-m6hrt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-15T10:45:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29f8910beaf4bb37bccb6cd2847df6fa36cea81756a04cf6429c2e847820e627
      image: quay.io/argoproj/argocd:v2.0.4
      imageID: quay.io/argoproj/argocd@sha256:976dfbfadb817ba59f4f641597a13df7b967cd5a1059c966fa843869c9463348
      lastState:
        terminated:
          containerID: containerd://7fbefe0ade41fe4b30dc7a1fee90ca3805d012799d7e9fbf9e4093384992f575
          exitCode: 255
          finishedAt: "2022-01-15T10:45:11Z"
          reason: Unknown
          startedAt: "2022-01-15T09:38:39Z"
      name: argocd-server
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-15T10:45:22Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.15
    podIPs:
    - ip: 10.42.14.15
    qosClass: BestEffort
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:37Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-hf9rs
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1153102"
    uid: 597353b7-9a49-47ce-9796-bafa1edfe22c
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-c967
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-17T14:39:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8cfdcc343d20dcc9bb1ffc6bfb60653d667b20f03429e69979c257910a43619b
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://63afae93fd4aa71dda204cd463c9d988856202ed2a65660734858b798144f704
          exitCode: 1
          finishedAt: "2022-01-17T14:39:34Z"
          reason: Error
          startedAt: "2022-01-16T17:57:53Z"
      name: imdb-mongodb
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2022-01-17T14:39:34Z"
    hostIP: 192.168.1.5
    phase: Running
    podIP: 10.42.14.19
    podIPs:
    - ip: 10.42.14.19
    qosClass: Burstable
    startTime: "2022-01-14T17:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:39:36Z"
    generateName: local-path-provisioner-7c458769fb-
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb-crhqg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7c458769fb
      uid: 38cc8905-1b86-42b9-860b-c94739f02f56
    resourceVersion: "1207915"
    uid: ff97a673-2be6-4063-b70b-0a3201cf0a5b
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HELPER_IMAGE
        value: rancher/library-busybox:1.31.1
      image: rancher/local-path-provisioner:v0.0.14
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: local-path-provisioner-service-account-token-rpjfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-417a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: local-path-provisioner-service-account-token-rpjfj
      secret:
        defaultMode: 420
        secretName: local-path-provisioner-service-account-token-rpjfj
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-18T07:25:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:42:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c898da8e418c9781f63f3d44c3152a22f816bd49b5034c71890668c4631f77d
      image: docker.io/rancher/local-path-provisioner:v0.0.14
      imageID: docker.io/rancher/local-path-provisioner@sha256:40cb8c984c1759f1860eee088035040f47051c959a6d07cdb126e132c6f43b45
      lastState:
        terminated:
          containerID: containerd://99b0c7e0521601106d9270b95fb01c7298e3a1ceabdcdaadd5c84f92e63164b2
          exitCode: 255
          finishedAt: "2022-01-18T07:25:24Z"
          reason: Error
          startedAt: "2022-01-15T10:26:12Z"
      name: local-path-provisioner
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2022-01-18T07:25:25Z"
    hostIP: 192.168.1.6
    phase: Running
    podIP: 10.42.13.11
    podIPs:
    - ip: 10.42.13.11
    qosClass: BestEffort
    startTime: "2022-01-14T17:42:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-tpnkl
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1367655"
    uid: 58356e71-e289-4827-aa07-72b7f830b624
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T08:16:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f5ff3b1c34dc2e3f027f4742ad04879ddce0c2b310652ec8909c23e81e8487e
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://a5c3f80954385137e99eff0fa4ad33f4f5746f10f1f564fa2d982ccbfc656f8a
          exitCode: 1
          finishedAt: "2022-01-20T08:16:54Z"
          reason: Error
          startedAt: "2022-01-18T12:20:56Z"
      name: imdb-mongodb
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-01-20T08:16:55Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.15
    podIPs:
    - ip: 10.42.15.15
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-14T17:57:38Z"
    generateName: imdb-mongodb-7795b5bb9b-
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b-g87rc
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: imdb-mongodb-7795b5bb9b
      uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
    resourceVersion: "1377367"
    uid: 0c5ea639-6dc9-4750-9482-2dddaa0dc3ed
  spec:
    containers:
    - image: adhirkirtikar/imdb-mongodb:0.32
      imagePullPolicy: IfNotPresent
      name: imdb-mongodb
      resources:
        requests:
          cpu: 50m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-gqslf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k3s-imdb-mongodb-a539-8745b0-node-pool-3528
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-gqslf
      secret:
        defaultMode: 420
        secretName: default-token-gqslf
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-20T11:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-14T17:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80937d050f8034f0d56733947fdd629370d107a964a4cafbf207d7662c46feff
      image: docker.io/adhirkirtikar/imdb-mongodb:0.32
      imageID: docker.io/adhirkirtikar/imdb-mongodb@sha256:ffd0682dff35b559e5404ba47111a0478f932c9335ea061b22ac6184efac31b9
      lastState:
        terminated:
          containerID: containerd://f810be05f3d74bd67bdb46ca2d075db3bb15c703c889f0a862a8297b78a51807
          exitCode: 1
          finishedAt: "2022-01-20T11:14:53Z"
          reason: Error
          startedAt: "2022-01-18T20:27:59Z"
      name: imdb-mongodb
      ready: true
      restartCount: 13
      started: true
      state:
        running:
          startedAt: "2022-01-20T11:14:54Z"
    hostIP: 192.168.1.7
    phase: Running
    podIP: 10.42.15.14
    podIPs:
    - ip: 10.42.15.14
    qosClass: Burstable
    startTime: "2022-01-14T17:57:38Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-02T13:28:37Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "199"
    uid: 84a91b4b-c78d-4f2a-a703-e170f325436c
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system","prometheus.io/port":"9153","prometheus.io/scrape":"true"},"labels":{"k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.43.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"},{"name":"metrics","port":9153,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "274"
    uid: fd1b2ec9-4f3c-467a-8631-92e5aa3eb1d9
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"metrics-server-service","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server","objectset.rio.cattle.io/hash":"a5d3bc601c871e123fa32b27f549b6ea770bcf4a"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443}],"selector":{"k8s-app":"metrics-server"}}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "305"
    uid: 0ce2a62e-f1f6-4197-ad48-83699166fbd9
  spec:
    clusterIP: 10.43.195.83
    clusterIPs:
    - 10.43.195.83
    ports:
    - port: 443
      protocol: TCP
      targetPort: 443
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "572"
    uid: 783ca5a3-e11a-43f6-9a2b-774de4401134
  spec:
    clusterIP: 10.43.6.57
    clusterIPs:
    - 10.43.6.57
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "576"
    uid: 22584a98-a875-40f2-acb2-d2f602a292f3
  spec:
    clusterIP: 10.43.191.121
    clusterIPs:
    - 10.43.191.121
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "580"
    uid: d362ca0f-4cd6-412a-9dec-6cde78cc3b1b
  spec:
    clusterIP: 10.43.151.35
    clusterIPs:
    - 10.43.151.35
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "584"
    uid: 98ad4137-22bb-42be-8674-239981c322d2
  spec:
    clusterIP: 10.43.200.181
    clusterIPs:
    - 10.43.200.181
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "592"
    uid: 1b78d447-c56d-4fbc-afac-63f3c324897d
  spec:
    clusterIP: 10.43.79.207
    clusterIPs:
    - 10.43.79.207
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"k8s-app":"kubernetes-dashboard"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "757"
    uid: 4a3269a5-c2d8-467d-b212-4e8fea19859e
  spec:
    clusterIP: 10.43.7.72
    clusterIPs:
    - 10.43.7.72
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      k8s-app: kubernetes-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"k8s-app":"dashboard-metrics-scraper"}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "774"
    uid: e40e7e79-6515-40ea-b060-ccb4c611e3f2
  spec:
    clusterIP: 10.43.53.250
    clusterIPs:
    - 10.43.53.250
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      k8s-app: dashboard-metrics-scraper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-prometheus
    namespace: kube-system
    resourceVersion: "972"
    uid: cf5bcee1-cf87-417c-bb34-2d35abe55675
  spec:
    clusterIP: 10.43.138.122
    clusterIPs:
    - 10.43.138.122
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/session-cookie-name: sticky
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "920377"
    uid: 1e613a23-5d12-4312-838c-f4c2ff3228d1
  spec:
    clusterIP: 10.43.54.241
    clusterIPs:
    - 10.43.54.241
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: imdb-mongodb
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "924358"
    uid: 254545e4-557d-4cd4-b840-03d95e245409
  spec:
    clusterIP: 10.43.214.29
    clusterIPs:
    - 10.43.214.29
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 31757
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 30343
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: traefik
      release: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2022-01-02T13:29:02Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd","resourceVersion":"588","uid":"80b6edc8-90b3-4bc1-9a32-914644421ea6"},"spec":{"clusterIP":"10.43.120.139","clusterIPs":["10.43.120.139"],"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "926457"
    uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
  spec:
    clusterIP: 10.43.120.139
    clusterIPs:
    - 10.43.120.139
    externalTrafficPolicy: Cluster
    ports:
    - name: http
      nodePort: 30183
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      nodePort: 31258
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUT2/iyBP9Kj/Vue3Y4DDG0u8wSnKIdocgYPYSoajcLqCXdrfVXfYGIX/3lQ0ZSDYkq9k97JH686h+7/ntYatMARncIpXWzIlBAFbqN3JeWQMZYFX5qyYGASUxFsgI2R4MlgQZ+EbqPEC3trIIPLmGHIi+6SuU3cShBwKkI2RlzUKV5BnLCjJTay1AY07ad6A2/50ke+LQKRtKZNYUKnu1Qb+BDL6M0xSH8fUoHUXyOk0Jv1A6XuUxRjga0yBKKR3i9QBEd5e0hp3Vmly4HfozNGML8qRJsnWQwQq1J2gFoDGW+xM/PEYVh3ef8EFcHLZ/GHLButlCBldNLP73izLF/+fkGiXp070jyW/p/XzpDfmtgL43oxU5MpI8ZI/71zL3Ch+9cLrvwgV1T0Ia5SMqZBqMo3wYJLmMgzEOB8E4TkZJkgxiwlEn/ImojF1N7bIV4CuSHcsnIfZQIsvNrz/cgFV1wWFtK4CprDQy9YtnxvwbNrsM/LFxfCPf5aM9e0+3jMqQO1B8nNd5UFnHQRqBAFXiuis6NHJD7mqrVVWRC3SeNVEYh51/u+nLCBvreWodQ5ZG4vSXp1LlLFtpNWSwuJlCuxRApjnHm89unqYPswUIaFDX1MsJrfgxcHs3XzxNZw+Lh7ORHuztzKco99OzfhyFyTCMB1EYD8f9ZY68rV1vyn17pGdaaz21WskdZHC/mlieOvJkunTyJGuneHdjDdMz96xjhbnSihUdFC4KyB5hcrd4+nr77X4Cy7Y9u+qFzCQZ/lM9DhAnQZJk+BdF+tpPSdKh/wuavAfzHxFlKYCtJveSu4972FKH36V04KymcFvn5Awx+e4jLNHzIQWrbquP8Ltn5dmDAFqtSDJkMLFzuaGi1tQ//GPI4wcfVBoN/RTyjVOsJOqvRWGNfzB69y5Mu+yioq4KZJqzQ6b1rmOGd1Wnwsxqrcz6e98HAe7V7z4gn78bbFBpzDVBFrd99DBy3TMsa+fI8KQuc3IvZxaQRQJMX/umvH9VLsgrR8XljRlhsYMsats/AwAA///lrIZfKggAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: argocd-server
      objectset.rio.cattle.io/owner-namespace: argocd
    creationTimestamp: "2022-01-02T16:57:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 7988a3156860c588ea7e89fb1a0a69e208e83a52
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-argocd-server
    namespace: argocd
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: argocd-server
      uid: 80b6edc8-90b3-4bc1-9a32-914644421ea6
    resourceVersion: "982870"
    uid: 5b0d4f73-68ad-4aa5-9d61-8434582babcd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-argocd-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-argocd-server
          svccontroller.k3s.cattle.io/svcname: argocd-server
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.120.139
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberMisscheduled: 0
    numberReady: 0
    numberUnavailable: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"civo-csi-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"civo-csi-node"}},"template":{"metadata":{"labels":{"app":"civo-csi-node","role":"civo-csi"}},"spec":{"containers":[{"args":["--v=5","--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"],"env":[{"name":"ADDRESS","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0","name":"csi-node-driver-registrar","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi/","name":"plugin-dir"},{"mountPath":"/registration/","name":"registration-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["SYS_ADMIN"]},"privileged":true},"volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"},{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/etc","name":"etc-dir","readOnly":true},{"mountPath":"/var/lib/kubelet","mountPropagation":"Bidirectional","name":"pods-mount-dir"},{"mountPath":"/dev","name":"device-dir"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","serviceAccount":"civo-csi-node-sa","volumes":[{"emptyDir":{},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi.civo.com","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/lib/kubelet","type":"Directory"},"name":"pods-mount-dir"},{"hostPath":{"path":"/etc"},"name":"etc-dir"},{"hostPath":{"path":"/dev"},"name":"device-dir"},{"hostPath":{"path":"/etc/udev/rules.d/"},"name":"udev-rules-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-node
    namespace: kube-system
    resourceVersion: "982954"
    uid: a94f6e36-3f9b-4625-8a65-6dab3ddee335
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-node
          role: civo-csi
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi/
            name: plugin-dir
          - mountPath: /registration/
            name: registration-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /etc
            name: etc-dir
            readOnly: true
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: device-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-node-sa
        serviceAccountName: civo-csi-node-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /etc
            type: ""
          name: etc-dir
        - hostPath:
            path: /dev
            type: ""
          name: device-dir
        - hostPath:
            path: /etc/udev/rules.d/
            type: ""
          name: udev-rules-dir
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8xUTW/jNhD9K8WcKUWypcQR0MMiySFo1zFsby+BEVDkKGZNkQI5UmMY+u8FZWftbL6KbQ89ejjz/Oa90dvBRhkJBVxzrK1ZIAED3qg/0HllDRTAm8afdSkwqJG45MSh2IHhNUIBvhO6jMhxrNQG2FD2DRfhbdOWGPmtJ6yBgXDISVmzVDV64nUDhWm1ZqB5idoHTFv+iYI8UuyUjQUn0hgre7bmfg0FVOM0u8jTfFSV1UVynudyLJL0XI7PJ3iZpOnkcjypzpEDC7SENeSs1ujizdifoBkr0aNGQdYFVK49Qs+AG2NpoPghGSX3ax/xgb3bbP8y6KLHbgMFnHUp++U3ZeSvC3SdEvjp3EHjo7qft7+lfc9gaJhjhQ6NQA/F/e6lyYO/h0s40ntFoB22H+VZnuWYRXl+IaNMyCwqJ1kSJWN5meMoy7PkMjh+VKgg12K/6hn4BkWQ9+jADmpOYv379zPgTfPqsvqeAWHdaE44jJyc4j+4rLcgP74S34kftu9P2Icxrgy6vZSHTl1GjXUUTRJgoGr+GIqOG7FGd7bRqmnQRbosuiRO4xEwCN3vI6ytp5l1BMUkYce/PJYaZ8kKq6GA5dUM+hUDNN0p3mJ+9TC7my+BQcd1G0qTBHr2veH6ZrF8mM3vlncnLQPYjz2fotzOTt7TJM7G8SjN4tHlQMyht60bbm/XH9SZtVrPrFZiCwXcVlNLM4ceTYggj6J1irZX1hA+0SA6b3iptCKFe1OlhOIepjfLhy/XX2+nsOr7E1LPWmbZ+N/asYc4+pFl41eGDLWfciSg/weWvAXz//BkxYCsRvccrvc72GDAD1EcOasxDnnlDBL68PHV3NM+V5swNeT0zZPy5IEBVhUKggKmdiHWKFuNw94fQx4+9KjR3OBPIV85RUpw/UVKa/yd0ds3YfpVCIq2kZxwQY4TPm6DMrRtgglzq7Uyj9+Gd2DgXvwewvDpm+EdV5qXGqFI+yF4iFM7KCxa59DQtK1LdM80JRQJAzPUvirvX5QleuVQvj8xRy63UCR9/3cAAAD//yCnZBwOCAAA
      objectset.rio.cattle.io/id: svccontroller
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: f31475152fbf70655d3c016d368e90118938f6ea
      svccontroller.k3s.cattle.io/nodeselector: "false"
    name: svclb-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Service
      name: traefik
      uid: 254545e4-557d-4cd4-b840-03d95e245409
    resourceVersion: "982965"
    uid: 2c36af85-d346-4fc6-81ae-4fa6acaf6f9f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik
          svccontroller.k3s.cattle.io/svcname: traefik
      spec:
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-port-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IP
            value: 10.43.214.29
          image: rancher/klipper-lb:v0.1.2
          imagePullPolicy: IfNotPresent
          name: lb-port-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-port-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"kubernetes-dashboard"}},"template":{"metadata":{"labels":{"k8s-app":"kubernetes-dashboard"}},"spec":{"containers":[{"args":["--auto-generate-certificates","--namespace=kubernetes-dashboard"],"image":"kubernetesui/dashboard:v2.4.0","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"kubernetes-dashboard","ports":[{"containerPort":8443,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/certs","name":"kubernetes-dashboard-certs"},{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"name":"kubernetes-dashboard-certs","secret":{"secretName":"kubernetes-dashboard-certs"}},{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "980295"
    uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:44Z"
      message: ReplicaSet "kubernetes-dashboard-897c7599f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:03:55Z"
      lastUpdateTime: "2022-01-15T10:03:55Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "980304"
    uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:28:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:37Z"
      message: ReplicaSet "coredns-854c77959c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"dashboard-metrics-scraper"},"name":"dashboard-metrics-scraper","namespace":"kubernetes-dashboard"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s-app":"dashboard-metrics-scraper"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"dashboard-metrics-scraper"}},"spec":{"containers":[{"image":"kubernetesui/metrics-scraper:v1.0.6","livenessProbe":{"httpGet":{"path":"/","port":8000,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"dashboard-metrics-scraper","ports":[{"containerPort":8000,"protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":2001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"kubernetes-dashboard","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"emptyDir":{},"name":"tmp-volume"}]}}}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
    name: dashboard-metrics-scraper
    namespace: kubernetes-dashboard
    resourceVersion: "981627"
    uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:09Z"
      lastUpdateTime: "2022-01-02T13:29:36Z"
      message: ReplicaSet "dashboard-metrics-scraper-79c5968bdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:17Z"
      lastUpdateTime: "2022-01-15T10:26:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no"],"image":"redis:6.2.4-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "981654"
    uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:29Z"
      message: ReplicaSet "argocd-redis-747b678f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:19Z"
      lastUpdateTime: "2022-01-15T10:26:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"command":["uid_entrypoint.sh","argocd-repo-server","--redis","argocd-redis:6379"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "981685"
    uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:03Z"
      message: ReplicaSet "argocd-repo-server-6fc4456c89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:27Z"
      lastUpdateTime: "2022-01-15T10:26:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "982973"
    uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:35Z"
      message: ReplicaSet "metrics-server-86cbb8457f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:28Z"
      lastUpdateTime: "2022-01-15T10:45:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"image":"ghcr.io/dexidp/dex:v2.27.0","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"initContainers":[{"command":["cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","name":"copyutil","volumeMounts":[{"mountPath":"/shared","name":"static-files"}]}],"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "983000"
    uid: 144b0435-eed6-4e47-b378-38b049027da2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:29:56Z"
      message: ReplicaSet "argocd-dex-server-76ff776f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:30Z"
      lastUpdateTime: "2022-01-15T10:45:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "983012"
    uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: traefik
        release: traefik
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:46Z"
      lastUpdateTime: "2022-01-02T13:30:10Z"
      message: ReplicaSet "traefik-6f9cbd9bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:37Z"
      lastUpdateTime: "2022-01-15T10:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-server","--staticassets","/shared/app"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"static-files"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "983033"
    uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:29:02Z"
      lastUpdateTime: "2022-01-02T13:30:11Z"
      message: ReplicaSet "argocd-server-7d57bc994b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:45:50Z"
      lastUpdateTime: "2022-01-15T10:45:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "1207917"
    uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-02T13:28:53Z"
      lastUpdateTime: "2022-01-02T13:29:33Z"
      message: ReplicaSet "local-path-provisioner-7c458769fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-18T07:25:26Z"
      lastUpdateTime: "2022-01-18T07:25:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377371"
    uid: 6d25ad67-7324-4451-bbb5-377411e83467
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imdb-mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2022-01-14T17:02:16Z"
      lastUpdateTime: "2022-01-14T17:02:18Z"
      message: ReplicaSet "imdb-mongodb-7795b5bb9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2022-01-15T10:26:16Z"
      lastUpdateTime: "2022-01-15T10:26:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: kubernetes-dashboard
      pod-template-hash: 897c7599f
    name: kubernetes-dashboard-897c7599f
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kubernetes-dashboard
      uid: 1d2ebe64-83c1-413e-90e2-c387e8163dfc
    resourceVersion: "980292"
    uid: 474cd3e1-041d-4c33-b503-8740bfd99c1c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kubernetes-dashboard
        pod-template-hash: 897c7599f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kubernetes-dashboard
          pod-template-hash: 897c7599f
      spec:
        containers:
        - args:
          - --auto-generate-certificates
          - --namespace=kubernetes-dashboard
          image: kubernetesui/dashboard:v2.4.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: kubernetes-dashboard
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: kubernetes-dashboard-certs
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - name: kubernetes-dashboard-certs
          secret:
            defaultMode: 420
            secretName: kubernetes-dashboard-certs
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV32/bNhD+V4Z7ln8obhNXwB66OFuDLZ6RH30pjOJMnSzOFI8jKTdGoP99OEl2nDRNu2FPpsnvjt/38e70AOj0R/JBs4UM0Lkw2qaQwEbbHDKYkTO8q8hGSKCiiDlGhOwB0FqOGDXbIH959RepGCgOveahwhgNDTWPtCSB5Jvn/MWSH6y3G8hgMwlHJ9s0+el3bfOf3+c52++msFgRZKDYU27DD8GDQyUxm3pFg7ALkSpoEjC4ItOK2kzDAJ3bQ7q8svSWIgXJ1l97zp5m85tXri0xlJDBStHJdHLybjpN07M3ExxPpqe4epuOi5Pi9IyKszcnb8bq7ZkQ+UrSK6SDIyWUAxlSkb2sK4yq/OM1NY1ERo+R1juBeDZG2/WdyzFSl+L+zuIWtcGVIcjSJoG4c0Lg+glW9qlyZh93VCmv+tkccVdsI2pLPkD26QHQr2UBA8W2gARGFNWoN2MkhhfaECwT0BWuhZFHq0rye8yg/83S4XQ4hh63qI1ZsNFqBxlcFnOOC0+hq2+jt2QphIXnVSujQG1qT7elp1CyySGbJFDG6H6jKOcOozzqqCQ0sYQEHPsI2XQ8HScQVEntA364vV2IQdrqqNHMyODuhhTbPEB2Ok7AkdecH7ZSCa6VohCObk4TiLoiruMj8KUiEQqdgQc/Fy2rt5MDukd6jqzYQAZ3M2H4nZBBVO5p2O35i2Hv0qPAiqLXKrwQuEzAE+b6P1kukbtHx9Np+qOOf234yb/w21Pg2itqC9roSsfQFXzFXkoqPRtfaWiBf9cUulPlajkaj6t2ivbQDikNQKr2Ou7O2Ua6b2WiMfxl4fVWG1rTRVBo2mELWYEmUAIKHa600VF3VDDPpVnmF7eff7mczz7fXFx/vDy/kP7IPTs5Q2Ng2XSm/2nN7po5/qoN9VMki76mJoEtm7qiK65tX0eVLBe970dNCEfVZwu9HnSR8HhDn3MpT53bcOi7GRVYG2k5yzndHM2sFUUcPh2xHCADo219L7Y6r7n1ymAI8+76TsBAmTpE8gPlddQKDYizfqsVvVdKNMyf90pkQ37/Efv0ABsSdud9fPvhCa2OBNgJUkjCxb2Wd5XCp6IgFSGDOd+okvLaiPwujUgbeDb0TI80i2czcAYt/a+ZKxT9L6dc7h/2MBsKvb5CJ6brSNUTA/bDNdm322FHqHWgOef0gSX3AfW4Jdc9m0zNN6qlWTZN0/wTAAD///WE9yaICAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 854c77959c
    name: coredns-854c77959c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: cb08f902-5630-4a0d-8d9d-dfa2b8ca7386
    resourceVersion: "980301"
    uid: 65634bc0-ee90-41ca-8e9c-e49278d5951a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 854c77959c
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 854c77959c
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/coredns-coredns:1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:09Z"
    generation: 1
    labels:
      k8s-app: dashboard-metrics-scraper
      pod-template-hash: 79c5968bdc
    name: dashboard-metrics-scraper-79c5968bdc
    namespace: kubernetes-dashboard
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dashboard-metrics-scraper
      uid: 6cbdc8c5-cf30-48e8-8bc1-d66c446585ce
    resourceVersion: "981623"
    uid: fd6a9a20-a266-4dc1-a2c2-9e890fa49181
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: dashboard-metrics-scraper
        pod-template-hash: 79c5968bdc
    template:
      metadata:
        annotations:
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: dashboard-metrics-scraper
          pod-template-hash: 79c5968bdc
      spec:
        containers:
        - image: kubernetesui/metrics-scraper:v1.0.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: dashboard-metrics-scraper
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubernetes-dashboard
        serviceAccountName: kubernetes-dashboard
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        volumes:
        - emptyDir: {}
          name: tmp-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 747b678f89
    name: argocd-redis-747b678f89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 2a5a943d-6415-4d4e-913d-5782f1a08600
    resourceVersion: "981652"
    uid: f23d1cdb-ff99-4e8a-b86f-fcebd6a30d3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 747b678f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 747b678f89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          image: redis:6.2.4-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 6fc4456c89
    name: argocd-repo-server-6fc4456c89
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 9ada81c4-4b34-45d0-a4bd-c01841e05ea3
    resourceVersion: "981683"
    uid: d3468f6c-906d-4456-abf9-3ceaccc3624c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 6fc4456c89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 6fc4456c89
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - command:
          - uid_entrypoint.sh
          - argocd-repo-server
          - --redis
          - argocd-redis:6379
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6yTT2/TQBDFvwqas+00f9oQSxyqlhMQkJC4VDlMdifN4v2nnYnBivzd0cZUBLUmHHpbe3d+++bN2yNgNN8osQkeasAYedJOoYDGeA013FO0oXPkBQpwJKhREOojoPdBUEzwnD/D9jspYZIqmVApFLFUmTAxGQLF6H744SmVj20DNTRzPttpp8WbD8brd7daB38R4dER1FliMopLptRSKvW5/MsAjqgypTlsqeSOhRz0BVjckj212bzlEmN8dtE/6HvkPdRA0yuaLa5pOqfFDS5n12qltdaL3Yq2s/lqN10sl8vFTuf7XuwFhv8jEjmSygKZLCkJKa8ditp/vKy97wsQctGi0KnubMz/0fqo4DNZKnhB4ykx1A9HMA4fc0FCr/aUJn8X1u1VNa9uYNyINtiDo0/h4GUAurz8gpKdnoiLf2rFxVKbBP2m3xQQkwnJSHdnkXk9nBhMLH3QVKpkxCi0UEC+zCi6VSqz1yNKJFhKT8/g4QgNdVDD3W/MKbr82dsuByTmk3k08P6nYWHoiyPQbkdKoIZ1+Kr2pA+W8us7YU6SUrBU5WknT0KcI5XdTMGW0aKnVyU7ZBnS/By5efJ96JRclO7e5KT1L7nd9/2vAAAA//9qo4eWXQQAAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 86cbb8457f
    name: metrics-server-86cbb8457f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: dea9a8d5-e1ac-4386-805b-7173b3cd8386
    resourceVersion: "982970"
    uid: 6468facc-37f6-43f1-a39a-0a1d5544c95f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 86cbb8457f
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 86cbb8457f
        name: metrics-server
      spec:
        containers:
        - image: rancher/metrics-server:v0.3.6
          imagePullPolicy: IfNotPresent
          name: metrics-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76ff776f97
    name: argocd-dex-server-76ff776f97
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: 144b0435-eed6-4e47-b378-38b049027da2
    resourceVersion: "982997"
    uid: 074239c3-a7c8-4693-a7b8-592181b05b2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76ff776f97
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76ff776f97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          image: ghcr.io/dexidp/dex:v2.27.0
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    generation: 1
    labels:
      app: traefik
      chart: traefik-1.81.0
      heritage: Helm
      pod-template-hash: 6f9cbd9bd4
      release: traefik
    name: traefik-6f9cbd9bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 546779df-94f8-4ea0-b708-ba93a6ba9a77
    resourceVersion: "983011"
    uid: 8cd3fe8b-bc37-41c4-b8a6-9f3e5ffa9e92
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: traefik
        pod-template-hash: 6f9cbd9bd4
        release: traefik
    template:
      metadata:
        annotations:
          checksum/config: 160e687e8146d38bb3af5be4fd2fc17a2f4bddb909238f10a72b8755675478de
        creationTimestamp: null
        labels:
          app: traefik
          chart: traefik-1.81.0
          heritage: Helm
          pod-template-hash: 6f9cbd9bd4
          release: traefik
      spec:
        containers:
        - args:
          - --configfile=/config/traefik.toml
          image: rancher/library-traefik:1.7.19
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 8880
            name: httpn
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: dash
            protocol: TCP
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /ssl
            name: ssl
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: traefik
          name: config
        - name: ssl
          secret:
            defaultMode: 420
            secretName: traefik-default-cert
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 7d57bc994b
    name: argocd-server-7d57bc994b
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 439352e3-98cf-4ddd-8fac-5618827d29ab
    resourceVersion: "983030"
    uid: 93c07432-2f25-448d-8456-1c36feac89d6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 7d57bc994b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 7d57bc994b
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-server
          - --staticassets
          - /shared/app
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgI5KEKR7gG13F21haJW2pcKVRNnUlwc27KHbKMq/31lEiirLW0f9gmbmfn8zXzf5BXQyu/kvDQaMkBr/aBOIYKt1AVkcEVWmaYizRBBRYwFMkL2Cqi1YWRptA9Xkz+TYE+cOGkSgcyKEmkGMoBAdDZufmhy8VO9hQy2I38SqdPor29SF//MisLoTyE0VgQZKCNQxZ6Nwyf6UpG3KELldpdT7BvPVEEbgcKc1IetbdBvIIN0OipHF2JyUZa5GA0n48lwVI5HZXoxHRZTMZni3wXmxTiA/kLSIm9i60wtw/DJQRc/w8dbEoGNI6ukQA9ZGoEnRYKNC4EKWWxujqzR2vMvtW0ETJVVyLSvPRFWfR3iwEkYzSg1OQ/ZQ7hWFQb3PJzv1DO6YKk4FkaX8gkiGBCLQXfrf5JnbzSsIyBd75H7+a1urx6Xs8X8fjW7nEMENaod/etMFciUklRxR+XxvEIOOh16TN6G3LZtdAT9f36zmt89Xi9m/x0xIQOHWmzIDZTMHbomzne+yc1LliajNEmhXUcgq+C1k9R3m87qYTJM0jH0BaudUiujpGggg+tyaXjlyHeL9plPaqN2FS3MTnM38ioc+0ZP5/iG1f0Rd5XQrgNx66RxkptLhd4vu7zOcbE2BcXCSZYCVdCLXC0FzYQILy0/4hf3uTF2yRABG0Xu8LF4eIUthaYve/j9gvtbrZqwsDZkBkvD/EV69hA0orIkwZDB0tyLDRU7FZa7g9lTdUZRElbGaWLyYT+DK51RsVWo6Y8iV+h5r8M7kOuDOoddCGNfoA12/F3W3vzteZnatv0ZAAD//7zKZH2kBQAA
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:53Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 7c458769fb
    name: local-path-provisioner-7c458769fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 82bae371-cf10-4ea5-92c8-223c90cf835f
    resourceVersion: "1207916"
    uid: 38cc8905-1b86-42b9-860b-c94739f02f56
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 7c458769fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 7c458769fb
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HELPER_IMAGE
            value: rancher/library-busybox:1.31.1
          image: rancher/local-path-provisioner:v0.0.14
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      pod-template-hash: 7795b5bb9b
    name: imdb-mongodb-7795b5bb9b
    namespace: imdb-mongodb
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: imdb-mongodb
      uid: 6d25ad67-7324-4451-bbb5-377411e83467
    resourceVersion: "1377370"
    uid: 40d33ed6-bfd1-4cf7-98b2-2e417816539e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: imdb-mongodb
        pod-template-hash: 7795b5bb9b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: imdb-mongodb
          pod-template-hash: 7795b5bb9b
      spec:
        containers:
        - image: adhirkirtikar/imdb-mongodb:0.32
          imagePullPolicy: IfNotPresent
          name: imdb-mongodb
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["argocd-application-controller","--status-processors","20","--operation-processors","10"],"image":"quay.io/argoproj/argocd:v2.0.4","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"}]}],"serviceAccountName":"argocd-application-controller","volumes":[{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "980319"
    uid: 8f3efc47-72f2-40fe-b854-c0104bb81f5d
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - argocd-application-controller
          - --status-processors
          - "20"
          - --operation-processors
          - "10"
          image: quay.io/argoproj/argocd:v2.0.4
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-7df456b6f9
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-7df456b6f9
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"civo-csi-controller","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"civo-csi-controller"}},"serviceName":"civo-csi","template":{"metadata":{"labels":{"app":"civo-csi-controller","role":"civo-csi"}},"spec":{"containers":[{"args":["--csi-address=$(ADDRESS)","--default-fstype=ext4","--timeout=30s","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0","imagePullPolicy":"IfNotPresent","name":"csi-provisioner","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--v=5"],"env":[{"name":"ADDRESS","value":"/var/lib/kubelet/plugins/csi.civo.com/csi.sock"}],"image":"k8s.gcr.io/sig-storage/csi-attacher:v3.1.0","imagePullPolicy":"IfNotPresent","name":"csi-attacher","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]},{"env":[{"name":"CSI_ENDPOINT","value":"unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock"},{"name":"CIVO_API_KEY","valueFrom":{"secretKeyRef":{"key":"api-key","name":"civo-api-access"}}},{"name":"CIVO_REGION","valueFrom":{"secretKeyRef":{"key":"region","name":"civo-api-access"}}},{"name":"CIVO_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"namespace","name":"civo-api-access"}}},{"name":"CIVO_CLUSTER_ID","valueFrom":{"secretKeyRef":{"key":"cluster-id","name":"civo-api-access"}}},{"name":"CIVO_API_URL","valueFrom":{"secretKeyRef":{"key":"api-url","name":"civo-api-access"}}}],"image":"civo/csi:latest","imagePullPolicy":"Always","name":"civo-csi-plugin","volumeMounts":[{"mountPath":"/var/lib/kubelet/plugins/csi.civo.com","name":"socket-dir"}]}],"priorityClassName":"system-cluster-critical","serviceAccount":"civo-csi-controller-sa","volumes":[{"emptyDir":{},"name":"socket-dir"}]}}}}
    creationTimestamp: "2022-01-02T13:28:48Z"
    generation: 1
    name: civo-csi-controller
    namespace: kube-system
    resourceVersion: "981643"
    uid: cabbbea7-8145-4d34-be1d-937f2c8472ff
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: civo-csi-controller
    serviceName: civo-csi
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: civo-csi-controller
          role: civo-csi
      spec:
        containers:
        - args:
          - --csi-address=$(ADDRESS)
          - --default-fstype=ext4
          - --timeout=30s
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --v=5
          env:
          - name: ADDRESS
            value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        - env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
          - name: CIVO_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: civo-api-access
          - name: CIVO_REGION
            valueFrom:
              secretKeyRef:
                key: region
                name: civo-api-access
          - name: CIVO_NAMESPACE
            valueFrom:
              secretKeyRef:
                key: namespace
                name: civo-api-access
          - name: CIVO_CLUSTER_ID
            valueFrom:
              secretKeyRef:
                key: cluster-id
                name: civo-api-access
          - name: CIVO_API_URL
            valueFrom:
              secretKeyRef:
                key: api-url
                name: civo-api-access
          image: civo/csi:latest
          imagePullPolicy: Always
          name: civo-csi-plugin
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/plugins/csi.civo.com
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: civo-csi-controller-sa
        serviceAccountName: civo-csi-controller-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: socket-dir
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: civo-csi-controller-6d764dfc8d
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: civo-csi-controller-6d764dfc8d
    updatedReplicas: 1
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2022-01-14T17:02:32Z","reason":"ReadyForNewScale","message":"recommended
        size matches current size"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2022-01-16T20:49:27Z","reason":"ValidMetricFound","message":"the
        HPA was able to successfully calculate a replica count from cpu resource utilization
        (percentage of request)"},{"type":"ScalingLimited","status":"True","lastTransitionTime":"2022-01-16T07:20:22Z","reason":"TooFewReplicas","message":"the
        desired replica count is less than the minimum replica count"}]'
      autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"0"}}]'
    creationTimestamp: "2022-01-14T17:02:16Z"
    labels:
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb
    namespace: imdb-mongodb
    resourceVersion: "1377843"
    uid: c3166c77-d995-41ad-a745-a6cd558eded1
  spec:
    maxReplicas: 20
    minReplicas: 5
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: imdb-mongodb
    targetCPUUtilizationPercentage: 50
  status:
    currentCPUUtilizationPercentage: 0
    currentReplicas: 5
    desiredReplicas: 5
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUYW/iRhD9K9VI920xtjGJsXQfHHBKehdAJI1aVadoWQbYst61dseurhH/vVrHTUwvzalSv7GeNzPvzbzhCY5SbyGDn8wGGPBKPqB10mjIYMNJHIZNBAxKJL7lxCF7As1LhAwOqMqB1I64UgOyHHfyCKyNuooLDznWGxy4r46wBAbCIidp9L0s0REvK8h0rRQDxTeonC/ta4oDt+QC/zMQnEhhIM2w/QoZvDYym99RkEMKrDQ95IG7A2Qgkng33oy32wniOLyM0nE84mksLtJtMprE/HKLYrITCZwYcK0NtdxaFv9WWW7/li2MJmuUQvsOEfOHRjvYN8cuqxdqIvbDJ6m3H+eoymkr7Xt1uql/X/8r/K01nE4MXIXC69xwcTS73WdZSoIsCsOQAWFZKU7o4/2l/6/L+3bk7+QavZP7+fNS7+Z5PL74GEXj8egiKYrp5XQyS6M8iUbXkyJKL4tZehGn01k8Dos4HCWjIkyj6/D6Kkzz9OoqKaIwms7OptAYVZfoIPvtxdoNVzU6b9m2+S2ver5vaQ6eIS++P53YK8BoQk3vpneYXv6XFk5carRnZPw8gIEs+d4/LdfigHZ4VLKq0A58OGvCIAlG/n7t3idDd5fwhQHqpl9ukd8WwJ4lnq3kBfFQrO9ulov+p3WxWvbf8+Lz7eNsffNQrHu1HAqL1MdN5/n6/tG3vFvl037fM0/+I6EHOxBVLhsOPzx9+vmqWC+K++LuMV/dnD4MnbePePaWG3Y6BlGQRkEY0P7Pb/i+oes+X/9Y/CeCi+Xjar385dceMnCNYIFQtSO0gTKCKxaFQRIHYRAOo4v2Meoe4Bdt0ZnaCm+6pxPrHHhrak1v27D0oRUnfwLdQcCbhjsHtlfn+7XeWdVKrYyS4itkcLNbGFpZdD6vo0Tc0gtgqa+5VLVFYODQNlJgLoQvv+j9/b/a1x8UcapbSae/AgAA//8L+Vu5VgYAAA
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: helm-install-traefik
    namespace: kube-system
    resourceVersion: "1030"
    uid: 5ea30f34-516b-4446-a350-0cb1569cb892
  spec:
    backoffLimit: 1000
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=1155364EEC7C9D81A413F9E187ED8628CD250E20343E081F0FB08A8BB4E101CD
        creationTimestamp: null
        labels:
          controller-uid: 5ea30f34-516b-4446-a350-0cb1569cb892
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          image: rancher/klipper-helm:v0.4.3
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: chart-values-traefik
          name: values
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2022-01-02T13:29:48Z"
    conditions:
    - lastProbeTime: "2022-01-02T13:29:48Z"
      lastTransitionTime: "2022-01-02T13:29:48Z"
      status: "True"
      type: Complete
    startTime: "2022-01-02T13:28:53Z"
    succeeded: 1
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBdjCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3MtY2xp
      ZW50LWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3MtY2xpZW50LWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAARE5m2KYin1SxF9dzOS+hIo1dCn28IEXo64yxLAsWab
      /v6aVmjbTyg6UdoElaHJ29cBk7lQnObFgWC36Y+w23rZo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUXFelGrefWAcMUM1vGxvr
      I0Gksc4wCgYIKoZIzj0EAwIDRwAwRAIgfsubTlEqol7cFbicWbboaKbqE7J2Rq4q
      YKvje/DEPM0CID/oQm9cV5lSvbZMCDpEaeIb/dH/sjFZrK5ZwtWl9hEz
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["system:auth-proxy"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIBhjCCAS2gAwIBAgIBADAKBggqhkjOPQQDAjArMSkwJwYDVQQDDCBrM3MtcmVx
      dWVzdC1oZWFkZXItY2FAMTY0MTEzMDExMTAeFw0yMjAxMDIxMzI4MzFaFw0zMTEy
      MzExMzI4MzFaMCsxKTAnBgNVBAMMIGszcy1yZXF1ZXN0LWhlYWRlci1jYUAxNjQx
      MTMwMTExMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9V+lQfanw/vf/c/MqDrv
      lfH0cwQhGe36sb7MBbvMFZx0UbWhjZw4wNsvInQdp9SHjxLCyeoKun1LcoRvzkI7
      XKNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
      FIraFbhvWJoQXxM6cQZyCsl0uxk6MAoGCCqGSM49BAMCA0cAMEQCIG46oBVa54LP
      2QzzDRGE1u7+Xs2HKweULw3pMG7AqHNcAiAy419d8JaDbkhKRzj8KiLXlIIuKN9N
      9bCu/cKbTfWniw==
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:36Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "36"
    uid: 8161401c-c537-4668-bac8-090356af44ba
- apiVersion: v1
  data:
    clusterDNS: 10.43.0.10
    clusterDomain: cluster.local
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:40Z"
    name: cluster-dns
    namespace: kube-system
    resourceVersion: "262"
    uid: 512c77cd-7ab7-4055-b5c2-dd0ebcfc24fc
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/lib/rancher/k3s/storage"]
              }
              ]
      }
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/lib/rancher/k3s/storage\"]\n        }\n        ]\n}"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"local-storage","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"183f35c65ffbc3064603f43f1580d8c68a2dabd4"},"name":"local-path-config","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-config
    namespace: kube-system
    resourceVersion: "283"
    uid: ca26d8eb-0e98-4b59-aa9b-c2ca7ade5700
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-content-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-content-traefik
    namespace: kube-system
    resourceVersion: "340"
    uid: 1b7c3889-9241-42f0-8d55-8d2773ee38e9
- apiVersion: v1
  data:
    values-01_HelmChart.yaml: |-
      rbac:
        enabled: true
      ssl:
        enabled: true
      metrics:
        prometheus:
          enabled: true
      kubernetes:
        ingressEndpoint:
          useDefaultPublishedService: true
      priorityClassName: "system-cluster-critical"
      image: "rancher/library-traefik"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"kind":"ConfigMap","apiVersion":"v1","metadata":{"name":"chart-values-traefik","namespace":"kube-system","creationTimestamp":null,"labels":{"objectset.rio.cattle.io/hash":"c42f5b5dd9ee50718523a82c68d4392a7dec9fc4"},"annotations":{"objectset.rio.cattle.io/id":"helm-controller","objectset.rio.cattle.io/owner-gvk":"helm.cattle.io/v1,
        Kind=HelmChart","objectset.rio.cattle.io/owner-name":"traefik","objectset.rio.cattle.io/owner-namespace":"kube-system"}},"data":{"values-01_HelmChart.yaml":"rbac:\n  enabled:
        true\nssl:\n  enabled: true\nmetrics:\n  prometheus:\n    enabled: true\nkubernetes:\n  ingressEndpoint:\n    useDefaultPublishedService:
        true\npriorityClassName: \"system-cluster-critical\"\nimage: \"rancher/library-traefik\"\ntolerations:\n  -
        key: \"CriticalAddonsOnly\"\n    operator: \"Exists\"\n  - key: \"node-role.kubernetes.io/control-plane\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\"\n  - key: \"node-role.kubernetes.io/master\"\n    operator:
        \"Exists\"\n    effect: \"NoSchedule\""}}'
      objectset.rio.cattle.io/id: helm-controller
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:41Z"
    labels:
      objectset.rio.cattle.io/hash: c42f5b5dd9ee50718523a82c68d4392a7dec9fc4
    name: chart-values-traefik
    namespace: kube-system
    resourceVersion: "343"
    uid: 29d8c2ab-94df-43f6-bef6-a0222c772138
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "406"
    uid: c7b36751-fa88-4fd8-8432-d51eef33bba2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "412"
    uid: 7d7ba475-a10c-493a-af40-32e74324bdf2
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "418"
    uid: f712fe8f-b1b1-4d35-98eb-56458c6a356e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:28:53Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "422"
    uid: 4232a605-69e6-48fb-826d-cb99f59c0d6e
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:01Z"
    name: kube-root-ca.crt
    namespace: argocd
    resourceVersion: "528"
    uid: 47bb7270-7d1d-4b4d-9c0b-e465f5bbae37
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-cm
    namespace: argocd
    resourceVersion: "565"
    uid: f2905163-3941-41b6-a06b-faf9e19a6bb4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-gpg-keys-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-gpg-keys-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-gpg-keys-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-gpg-keys-cm
    namespace: argocd
    resourceVersion: "566"
    uid: caccc7ed-0860-4ea0-a64f-b1186bcc3be4
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-rbac-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-rbac-cm
    namespace: argocd
    resourceVersion: "567"
    uid: 5f01f0ad-a5a0-4d03-8a7c-3f8793395577
- apiVersion: v1
  data:
    ssh_known_hosts: |
      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssh_known_hosts":"bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-ssh-known-hosts-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
    resourceVersion: "568"
    uid: b94f5c52-3872-4da0-90c5-933ee01ea162
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":null,"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
    creationTimestamp: "2022-01-02T13:29:02Z"
    labels:
      app.kubernetes.io/name: argocd-tls-certs-cm
      app.kubernetes.io/part-of: argocd
    name: argocd-tls-certs-cm
    namespace: argocd
    resourceVersion: "569"
    uid: 36df5744-c701-4687-b2ab-d50734938557
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-02T13:29:09Z"
    name: kube-root-ca.crt
    namespace: kubernetes-dashboard
    resourceVersion: "751"
    uid: d8339210-c701-44a5-bc86-ae8b726a18a1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"k8s-app":"kubernetes-dashboard"},"name":"kubernetes-dashboard-settings","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2022-01-02T13:29:09Z"
    labels:
      k8s-app: kubernetes-dashboard
    name: kubernetes-dashboard-settings
    namespace: kubernetes-dashboard
    resourceVersion: "764"
    uid: 5e82b3c9-9ca4-441f-bd33-518883700ee7
- apiVersion: v1
  data:
    run.sh: |-
      @test "Test Access" {
        curl -D - http://traefik/
      }
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik-test
    namespace: kube-system
    resourceVersion: "963"
    uid: 364c6778-5853-49ba-b9c6-b5c0e54a3349
- apiVersion: v1
  data:
    traefik.toml: |
      # traefik.toml
      logLevel = "info"
      defaultEntryPoints = ["http","https"]
      [entryPoints]
        [entryPoints.http]
        address = ":80"
        compress = true
        [entryPoints.https]
        address = ":443"
        compress = true
          [entryPoints.https.tls]
            [[entryPoints.https.tls.certificates]]
            CertFile = "/ssl/tls.crt"
            KeyFile = "/ssl/tls.key"
        [entryPoints.prometheus]
        address = ":9100"
      [ping]
      entryPoint = "http"
      [kubernetes]
        [kubernetes.ingressEndpoint]
        publishedService = "kube-system/traefik"
      [traefikLog]
        format = "json"
      [metrics]
        [metrics.prometheus]
          entryPoint = "prometheus"
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2022-01-02T13:29:46Z"
    labels:
      app: traefik
      app.kubernetes.io/managed-by: Helm
      chart: traefik-1.81.0
      heritage: Helm
      release: traefik
    name: traefik
    namespace: kube-system
    resourceVersion: "965"
    uid: f9511149-b206-49cb-bafd-99d7d19d67b3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIBeDCCAR2gAwIBAgIBADAKBggqhkjOPQQDAjAjMSEwHwYDVQQDDBhrM3Mtc2Vy
      dmVyLWNhQDE2NDExMzAxMTEwHhcNMjIwMTAyMTMyODMxWhcNMzExMjMxMTMyODMx
      WjAjMSEwHwYDVQQDDBhrM3Mtc2VydmVyLWNhQDE2NDExMzAxMTEwWTATBgcqhkjO
      PQIBBggqhkjOPQMBBwNCAAQnf97sbfCk1mje+rzxqOuhJ4XKAYMSCn+F+k0sroKa
      EBx7+AKEuKIudor0kovVteTCbW6t7x+zyeM3jOetYyGmo0IwQDAOBgNVHQ8BAf8E
      BAMCAqQwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxoxRRiGccIZ2flUP4jTX
      x8HBQ+wwCgYIKoZIzj0EAwIDSQAwRgIhAIRtZISJYfqAnwJ+0BVWWTTSE14wHscw
      biKTFpxIjWSaAiEAtzVOCx9jUAN/C20sZW4XvFPTM1fskN8jV90BDzYJXdY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-14T17:00:34Z"
    name: kube-root-ca.crt
    namespace: imdb-mongodb
    resourceVersion: "920249"
    uid: e2d7d1ad-71ed-4779-92d0-a94a5f799178
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
          }
          hosts /etc/coredns/NodeHosts {
            ttl 60
            reload 15s
            fallthrough
          }
          prometheus :9153
          forward . /etc/resolv.conf
          cache 30
          loop
          reload
          loadbalance
      }
    NodeHosts: |
      192.168.1.6 k3s-imdb-mongodb-a539-8745b0-node-pool-417a
      192.168.1.7 k3s-imdb-mongodb-a539-8745b0-node-pool-3528
      192.168.1.5 k3s-imdb-mongodb-a539-8745b0-node-pool-c967
  kind: ConfigMap
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: '{"apiVersion":"v1","data":{"Corefile":".:53
        {\n    errors\n    health\n    ready\n    kubernetes cluster.local in-addr.arpa
        ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    hosts
        /etc/coredns/NodeHosts {\n      ttl 60\n      reload 15s\n      fallthrough\n    }\n    prometheus
        :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n}\n"},"kind":"ConfigMap","metadata":{"annotations":{"objectset.rio.cattle.io/id":"","objectset.rio.cattle.io/owner-gvk":"k3s.cattle.io/v1,
        Kind=Addon","objectset.rio.cattle.io/owner-name":"coredns","objectset.rio.cattle.io/owner-namespace":"kube-system"},"labels":{"objectset.rio.cattle.io/hash":"bce283298811743a0386ab510f2f67ef74240c57"},"name":"coredns","namespace":"kube-system"}}'
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2022-01-02T13:28:40Z"
    labels:
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "979508"
    uid: f3913da3-2d74-40d7-ad45-8ae6daed447e
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    creationTimestamp: "2022-01-14T17:02:16Z"
    generation: 1
    labels:
      app: imdb-mongodb
      app.kubernetes.io/instance: imdb-mongodb
    name: imdb-mongodb-ingress
    namespace: imdb-mongodb
    resourceVersion: "920394"
    uid: 92fbe6cf-017b-462c-b78a-224a1d7b71b9
  spec:
    rules:
    - host: imdb-mongodb.dec96de7-e7f9-4b06-9f21-2e0f053e0bfd.k8s.civo.com
      http:
        paths:
        - backend:
            service:
              name: imdb-mongodb
              port:
                number: 4000
          path: /
          pathType: Prefix
  status:
    loadBalancer:
      ingress:
      - ip: 212.2.240.35
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
 
---